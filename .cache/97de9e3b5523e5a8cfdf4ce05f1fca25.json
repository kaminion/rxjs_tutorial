{"dependencies":[{"name":"./observable/empty","loc":{"line":2,"column":22}},{"name":"./observable/of","loc":{"line":3,"column":19}},{"name":"./observable/throwError","loc":{"line":4,"column":27}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Notification = exports.NotificationKind = undefined;\n\nvar _empty = require(\"./observable/empty\");\n\nvar _of = require(\"./observable/of\");\n\nvar _throwError = require(\"./observable/throwError\");\n\nvar NotificationKind = exports.NotificationKind = undefined;\n/*@__PURE__*/ /** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\n(function (NotificationKind) {\n  NotificationKind[\"NEXT\"] = \"N\";\n  NotificationKind[\"ERROR\"] = \"E\";\n  NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (exports.NotificationKind = NotificationKind = {}));\nvar Notification = /*@__PURE__*/function () {\n  function Notification(kind, value, error) {\n    this.kind = kind;\n    this.value = value;\n    this.error = error;\n    this.hasValue = kind === 'N';\n  }\n  Notification.prototype.observe = function (observer) {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  };\n  Notification.prototype.do = function (next, error, complete) {\n    var kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  };\n  Notification.prototype.accept = function (nextOrObserver, error, complete) {\n    if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n      return this.observe(nextOrObserver);\n    } else {\n      return this.do(nextOrObserver, error, complete);\n    }\n  };\n  Notification.prototype.toObservable = function () {\n    var kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return (0, _of.of)(this.value);\n      case 'E':\n        return (0, _throwError.throwError)(this.error);\n      case 'C':\n        return (0, _empty.empty)();\n    }\n    throw new Error('unexpected notification kind value');\n  };\n  Notification.createNext = function (value) {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  };\n  Notification.createError = function (err) {\n    return new Notification('E', undefined, err);\n  };\n  Notification.createComplete = function () {\n    return Notification.completeNotification;\n  };\n  Notification.completeNotification = new Notification('C');\n  Notification.undefinedValueNotification = new Notification('N', undefined);\n  return Notification;\n}();\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map"},"hash":"e9d14cc06d7c955109633b214c4a515b"}