{"dependencies":[{"name":"../Observable","loc":{"line":2,"column":27}},{"name":"../scheduler/async","loc":{"line":3,"column":22}},{"name":"../util/isNumeric","loc":{"line":4,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interval = interval;\n\nvar _Observable = require(\"../Observable\");\n\nvar _async = require(\"../scheduler/async\");\n\nvar _isNumeric = require(\"../util/isNumeric\");\n\nfunction interval(period, scheduler) {\n  if (period === void 0) {\n    period = 0;\n  }\n  if (scheduler === void 0) {\n    scheduler = _async.async;\n  }\n  if (!(0, _isNumeric.isNumeric)(period) || period < 0) {\n    period = 0;\n  }\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = _async.async;\n  }\n  return new _Observable.Observable(function (subscriber) {\n    subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\n    return subscriber;\n  });\n} /** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\n\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n      counter = state.counter,\n      period = state.period;\n  subscriber.next(counter);\n  this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n//# sourceMappingURL=interval.js.map"},"hash":"0a5f6de9ccc21023145fb42d055beebe"}