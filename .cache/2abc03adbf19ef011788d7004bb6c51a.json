{"dependencies":[{"name":"../Observable","loc":{"line":2,"column":27}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.range = range;\nexports.dispatch = dispatch;\n\nvar _Observable = require(\"../Observable\");\n\nfunction range(start, count, scheduler) {\n  if (start === void 0) {\n    start = 0;\n  }\n  return new _Observable.Observable(function (subscriber) {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n    var index = 0;\n    var current = start;\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index: index, count: count, start: start, subscriber: subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n    return undefined;\n  });\n} /** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nfunction dispatch(state) {\n  var start = state.start,\n      index = state.index,\n      count = state.count,\n      subscriber = state.subscriber;\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n  subscriber.next(start);\n  if (subscriber.closed) {\n    return;\n  }\n  state.index = index + 1;\n  state.start = start + 1;\n  this.schedule(state);\n}\n//# sourceMappingURL=range.js.map"},"hash":"92b495aeb60333b0717506764b1bd4bf"}